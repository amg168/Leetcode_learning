/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    List<Integer> result=new ArrayList<Integer>();

    // public List<Integer> postorder(Node root) {
    //     if(root == null)
    //         return result;

    //     for(int i=0;i<root.children.size();i++)
    //     {
    //         if(root.children.get(i)!=null)
    //             postorder(root.children.get(i));  
    //     }

    //     result.add(root.val);

    //     return result;
    // }

    public List<Integer> postorder(Node root) {
        if(root == null)
            return result;

        Stack<Node> stack=new Stack<Node>();

        stack.push(root);

        while(!stack.isEmpty())
        {
            Node node=stack.pop();

            result.add(node.val);

            for(int i=0;i<node.children.size();i++)
            {
                stack.push(node.children.get(i));
            }
        }

        Collections.reverse(result);

        return result;
    }
}
//runtime:4 ms
//memory:38.9 MB
