/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        List<TreeNode> result=new ArrayList<TreeNode>();

        if(n == 0)
            return result;
        
        return generate(1,n);
    }

    public List<TreeNode> generate(int start,int end)
    {
        List<TreeNode> result=new ArrayList<TreeNode>();

        if(start > end)
        {
            result.add(null);

            return result;
        };

        for(int i=start;i<=end;i++)
        {
            List<TreeNode> left=generate(start,i-1);

            List<TreeNode> right= generate(i+1,end);

            for(TreeNode leftNode:left)
            {
                for(TreeNode rightNode: right)
                {
                    TreeNode cur=new TreeNode(i);

                    cur.left=leftNode;

                    cur.right=rightNode;

                    result.add(cur);
                }
            }
        }

        return result;

        
    }
}
//runtime:1 ms
//memory:39 MB
