/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int countNodes(TreeNode root) {
        //使用队列进行宽度优先遍历
		int count = 0;
		
		if(root ==  null)
			return 0;
		Queue<TreeNode> nodeQueue=new LinkedList<TreeNode>();
		
		nodeQueue.add(root);
		
		while(!nodeQueue.isEmpty())
		{
			TreeNode cur=nodeQueue.poll();
			
			count++;
			
			if(cur.left !=null)
				nodeQueue.add(cur.left);
			
			if(cur.right != null)
				nodeQueue.add(cur.right);
		}
		
		return count;
    }
}
//runtime:6 ms
//memory:41.1 MB
