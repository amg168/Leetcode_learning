/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        return generateBST(head,null);
    }

    public TreeNode generateBST(ListNode left,ListNode right)
    {
        if(left == right)
            return null;
        
        ListNode mid = getMid(left,right);

        TreeNode root = new TreeNode(mid.val);

        root.left = generateBST(left,mid);

        root.right = generateBST(mid.next,right);

        return root;
    }

    public ListNode getMid(ListNode left,ListNode right)
    {
        ListNode fast = left;

        ListNode slow = left;

        while(fast != right && fast.next != right)
        {
            fast =fast.next.next;

            slow = slow.next;
        }

        return slow;
    }
}

//runtime:0 ms
//memory:39.8 MB
