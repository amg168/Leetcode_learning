/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> priorResult=new ArrayList<Integer>();

        if(root == null)
            return priorResult;
            
        Stack<TreeNode> stack=new Stack<TreeNode>();

        stack.push(root);

        while(!stack.isEmpty())
        {
            TreeNode cur=stack.pop();
            
            priorResult.add(cur.val);

            if(cur.right !=null)
                stack.push(cur.right);

            if(cur.left != null)
                stack.push(cur.left);
        }

        return priorResult;
    }
}
//runtime:1 ms
//memory:36.6 MB
