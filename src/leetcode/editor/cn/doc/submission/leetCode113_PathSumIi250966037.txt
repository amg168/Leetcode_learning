/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> result = new ArrayList<>();
    List<Integer> list = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {

        if(root == null)
            return  result;

        printAllPath(root,0,targetSum);

//        System.out.println(result);

        return  result;
    }

    public void printAllPath(TreeNode root,int count,int targetSum){
        if(root == null)
            return;

        count += root.val;
        list.add(root.val);
        if(root.left == null && root.right == null && targetSum == count){
            result.add(new ArrayList<>(list));
        }

        printAllPath(root.left,count,targetSum);
        printAllPath(root.right,count,targetSum);

        list.remove(list.size() - 1);
    }
}

//runtime:1 ms
//memory:38.9 MB
